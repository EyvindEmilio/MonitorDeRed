<?php namespace App;

/**
 * Created by PhpStorm.
 * User: Emilio
 * Date: 21/5/2016
 * Time: 11:04 AM
 */

use Exception;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;


class ApiBaseModel extends Model
{
    public function update(array $attributes = [], array $options = [])
    {
        if (Auth::check())
            if ($this->getTable() == 'devices' || $this->getTable() == 'areas' || $this->getTable() == 'device_types') {
                $table = '';
                if ($this->getTable() == 'devices') {
                    $table = 'Dispositivios';
                } elseif ($this->getTable() == 'areas') {
                    $table = 'Areas';
                } elseif ($this->getTable() == 'device_types') {
                    $table = 'Tipos de dispositivos';
                }

                $changes = '<span class="small">';
                foreach ($attributes as $key => $value) {
                    $changes .= 'Modificado campo "<i style="">' . $key . '</i>" a "<i  style="">' . $value . '</i>"<br>';
                }
                $changes .= '</span>';
                $log = array(
                    'user' => Auth::user()->id,
                    'ip' => $_SERVER['REMOTE_ADDR'],
                    'type' => '<button class="btn btn-info btn-xs span">Modificacion</button>',
                    'description' => $changes,
                    'table' => $table,
                );
                LogsModel::create($log);
            }
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }

    public function delete()
    {
        if (Auth::check())
            if ($this->getTable() == 'devices' || $this->getTable() == 'areas' || $this->getTable() == 'device_types') {
                $table = '';
                if ($this->getTable() == 'devices') {
                    $table = 'Dispositivios';
                } elseif ($this->getTable() == 'areas') {
                    $table = 'Areas';
                } elseif ($this->getTable() == 'device_types') {
                    $table = 'Tipos de dispositivos';
                }

                $changes = '<span class="small">Registro eliminado con id: " ' . $this->getKey() . ' "</span>';
                $log = array(
                    'user' => Auth::user()->id,
                    'ip' => $_SERVER['REMOTE_ADDR'],
                    'type' => '<button class="btn btn-danger btn-xs span">Eliminado</button>',
                    'description' => $changes,
                    'table' => $table,
                );
                LogsModel::create($log);
            }

        return parent::delete(); // TODO: Change the autogenerated stub
    }

    public function save(array $options = [])
    {
        try {
            if (!$this->getKey() && Auth::check())
                if ($this->getTable() == 'devices' || $this->getTable() == 'areas' || $this->getTable() == 'device_types') {
                    $table = '';
                    if ($this->getTable() == 'devices') {
                        $table = 'Dispositivios';
                    } elseif ($this->getTable() == 'areas') {
                        $table = 'Areas';
                    } elseif ($this->getTable() == 'device_types') {
                        $table = 'Tipos de dispositivos';
                    }
                    $attributes = $this->toArray();
                    $changes = '<span class="small">';
                    foreach ($attributes as $key => $value) {
                        $changes .= 'Ingresado campo "<i style="">' . $key . '</i>" con valor: "<i  style="">' . $value . '</i>"<br>';
                    }
                    $changes .= '</span>';
                    $log = array(
                        'user' => Auth::user()->id,
                        'ip' => $_SERVER['REMOTE_ADDR'],
                        'type' => '<button class="btn btn-success btn-xs span">Registro</button>',
                        'description' => $changes,
                        'table' => $table,
                    );
                    LogsModel::create($log);
                }
        } catch (Exception $e) {

        }
        return parent::save($options); // TODO: Change the autogenerated stub
    }
}